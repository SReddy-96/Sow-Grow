# Generated by Django 5.0.6 on 2024-05-13 11:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('variety', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Harvest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('cut_and_grow', models.BooleanField(default=False)),
                ('comments', models.CharField(blank=True, max_length=200)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvest', to='app.plant')),
            ],
        ),
        migrations.CreateModel(
            name='PlantingYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('sowed', models.DateField(blank=True)),
                ('harvested', models.DateField(blank=True)),
                ('transferred', models.DateField(blank=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planting_year', to='app.plant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planting_year', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('IS', 'Indirect Sowing'), ('DS', 'Direct Sowing'), ('O', 'Other')], max_length=3)),
                ('comments', models.CharField(blank=True, max_length=200)),
                ('start_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('depth_cm', models.DecimalField(blank=True, decimal_places=1, max_digits=3)),
                ('spacing_cm', models.DecimalField(blank=True, decimal_places=1, max_digits=4)),
                ('row_spacing_cm', models.DecimalField(blank=True, decimal_places=1, max_digits=4)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sowing', to='app.plant')),
            ],
        ),
        migrations.CreateModel(
            name='Tending',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('light_requirements', models.CharField(choices=[('FS', 'Full Sun'), ('PS', 'Partial Shade'), ('DS', 'Deep Shade')], max_length=2)),
                ('water_requirements', models.CharField(choices=[('DT', 'Drought Tolerant'), ('MW', 'Moderate Watering'), ('FW', 'Frequent Watering')], max_length=2)),
                ('fertilizer_needs', models.CharField(choices=[('HF', 'Heavy Feeder'), ('LF', 'Light Feeder'), ('NF', 'No Fertilizer')], max_length=2)),
                ('pest_control', models.TextField(blank=True)),
                ('disease_control', models.TextField(blank=True)),
                ('thinning', models.BooleanField(default=False)),
                ('start_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_month', models.IntegerField(choices=[(0, 'January'), (1, 'February'), (2, 'March'), (3, 'April'), (4, 'May'), (5, 'June'), (6, 'July'), (7, 'August'), (8, 'September'), (9, 'October'), (10, 'November'), (11, 'December')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tending', to='app.plant')),
            ],
        ),
        migrations.CreateModel(
            name='YearReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('yield_amount', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('comments', models.CharField(blank=True, max_length=200)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_reviews', to='app.plant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='year_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
